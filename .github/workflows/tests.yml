name: tests

on:
  push:
  pull_request:
  schedule:
    - cron: '0 12 * * 0'  # run once a week on Sunday
  # Allow to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  ZOPE_INTERFACE_STRICT_IRO: 1
  PIP_UPGRADE_STRATEGY: eager
  # Don't get warnings about Python 2 support being deprecated. We
  # know. The env var works for pip 20.
  PIP_NO_PYTHON_VERSION_WARNING: 1

jobs:
  sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Build source distribution
      run: |
        python -m pip install -U setuptools wheel pip
        python setup.py sdist
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*.tar.*

  wheels-ubuntu:
    name: Build on ${{ matrix.python}}ubuntu-${{ matrix.arch}}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - "cp36-*"
          - "cp37-*"
          - "cp38-*"
          - "cp39-*"
          - "cp310-*"
        arch:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64
      - uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: ${{ matrix.python }}
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_TEST_EXTRAS: "test"
          CIBW_TEST_REQUIRES: "zope.testrunner coverage coverage-python-version"
          CIBW_TEST_COMMAND: >
            python -m coverage run -p -m zope.testrunner -s ExtensionClass --test-path=`python -c 'import site; print(site.getsitepackages()[0])'` -v --auto-color
            &&
            PURE_PYTHON=1 python -m coverage run -p -m zope.testrunner -s ExtensionClass --test-path=`python -c 'import site; print(site.getsitepackages()[0])'` -v --auto-color
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: wheelhouse/*.whl

  wheels-macos:
    name: Build on ${{ matrix.python}}macos-${{ matrix.arch}}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - "cp36-*"
          - "cp37-*"
          - "cp38-*"
          - "cp39-*"
          - "cp310-*"
        arch:
          - x86_64
          - universal2
        exclude:
          - python: "cp36-*"
            arch: universal2
          - python: "cp37-*"
            arch: universal2
    steps:
      - uses: actions/checkout@v2
      - uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: ${{ matrix.python }}
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_TEST_EXTRAS: "test"
          CIBW_TEST_REQUIRES: "zope.testrunner coverage coverage-python-version"
          CIBW_TEST_COMMAND: >
            python -m coverage run -p -m zope.testrunner -s ExtensionClass --test-path=`python -c 'import site; print(site.getsitepackages()[0])'` -v --auto-color
            &&
            PURE_PYTHON=1 python -m coverage run -p -m zope.testrunner -s ExtensionClass --test-path=`python -c 'import site; print(site.getsitepackages()[0])'` -v --auto-color
          CIBW_TEST_SKIP: "*-macosx_universal2:arm64"
          CIBW_TEST_COMMAND_WINDOWS: "zope-testrunner --test-path=src"
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: wheelhouse/*.whl

  wheels-windows:
    name: Build on ${{ matrix.python}}windows-${{ matrix.arch}}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - "cp36-*"
          - "cp37-*"
          - "cp38-*"
          - "cp39-*"
          - "cp310-*"
        arch:
          - x86
          - AMD64
    steps:
      - uses: actions/checkout@v2
      - uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: ${{ matrix.python }}
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_TEST_EXTRAS: "test"
          CIBW_TEST_REQUIRES: "zope.testrunner coverage coverage-python-version"
          CIBW_TEST_COMMAND_WINDOWS: >
            for /f "usebackq tokens=*" %a in (`python -c "import site; import os; print(os.path.abspath(site.getsitepackages()[-1]))"`) do zope-testrunner -s ExtensionClass --test-path=%a
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: wheelhouse/*.whl

  publish:
    name: Publish package to PyPI
    needs:
      - sdist
      - wheels-ubuntu
      - wheels-macos
      - wheels-windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/
      - run: |
          ls -al dist/
      - uses: pypa/gh-action-pypi-publish@v1.4.2
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        with:
          user: __token__
          password: ${{ secrets.TWINE_PASSWORD }}
          skip_existing: true
          packages_dir: dist/
